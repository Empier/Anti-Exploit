extern "C" {
#include <lua.h>
#include <lualib.h>
#include <lauxlib.h>
}

#include <Windows.h>

#pragma comment(lib, "lua53.lib")

lua_State *GL = NULL;


/*
int lua_rand(lua_State* L)
{
int a = 0;
int c = 0;
lua_Integer b = 0;
a = (int)luaL_checkinteger(L, 1);
c = (int)luaL_checkinteger(L, 2);
srand(time(NULL));

b = rand() % (c - a + 1) + a;
lua_pushinteger(L, b);

return 1;
}

int lua_say(lua_State* L)
{
char str[256] = { 0x00, };
strcpy(str, (char *)luaL_checkstring(L, 1));


return 0;
}
*/
int lua_showtext(lua_State* L)
{
	int color = 0;
	char str[256] = { 0x00, };

	strcpy(str, (char *)luaL_checkstring(L, 1));
	color = (int)luaL_checkinteger(L, 2);

	printf("str:%s color:%d\n", str, color);
	return 0;
}


unsigned WINAPI start_script(void *args)
{
	char tempdir[MAX_PATH] = { 0x00, };
	char dir[MAX_PATH] = { 0x00, };
	lua_State *L;
	L = luaL_newstate();
	if ((INT)L == 0 || (INT)L == -1)
		return 0;


	luaL_openlibs(L);
	lua_register(L, "showtext", lua_showtext);
	//lua_register(L, "say", lua_say);
	//lua_register(L, "rand", lua_rand);



	GL = lua_newthread(L);


	//strcpy(tempdir, scriptdir); ¡ﬂø‰«‘

	strcat(tempdir, (char *)args);
	//luaL_dofile(L, tempdir);
	if (luaL_dofile(L, tempdir))
	{
		//showtext((char *)lua_tostring(L, -1), 0x13);
	}

	//lua_close(GL);
	GL = 0;
	lua_close(L);

	return 0;
}
