#pragma comment(lib,"wininet.lib")

#define SP 0 //Verbose


#ifndef _HOOK_H_
#define _HOOK_H_


extern LPVOID(WINAPI *HeapAllocNext)(HANDLE hHeap,DWORD  dwFlags,SIZE_T dwBytes);
LPVOID WINAPI HeapAllocCallback(HANDLE hHeap,DWORD  dwFlags,SIZE_T dwBytes);

extern BOOL(WINAPI *CreateProcessWNext) (LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes,
	LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment,
	LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation);
BOOL WINAPI CreateProcessWCallback(LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes,
	LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment,
	LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation);

extern UINT(WINAPI *WinExecNext)(LPCSTR lpCmdLine,UINT   uCmdShow);
UINT WINAPI WinExecCallback(LPCSTR lpCmdLine,UINT   uCmdShow);

extern HINSTANCE(WINAPI *ShellExecuteWNext)(HWND    hwnd, LPCWSTR lpOperation,    LPCWSTR lpFile, LPCWSTR lpParameters, LPCWSTR lpDirectory,INT nShowCmd);
HINSTANCE ShellExecuteWCallback(HWND    hwnd, LPCWSTR lpOperation,    LPCWSTR lpFile, LPCWSTR lpParameters, LPCWSTR lpDirectory,INT nShowCmd);

extern HMODULE(WINAPI *LoadLibraryExWNext)(LPCWSTR lpFileName, HANDLE  hFile, DWORD  dwFlags);
HMODULE WINAPI LoadLibraryExWCallback(LPCWSTR lpFileName, HANDLE  hFile, DWORD  dwFlags);

extern HMODULE (WINAPI *GetModuleHandleWNext)(LPCWSTR lpModuleName);
HMODULE WINAPI GetModuleHandleWCallback(LPCWSTR lpModuleName);

extern int (*systemNext)(const char *command);
int systemCallback(const char *command);

extern int (*_wsystemNext)(const wchar_t *command);
int _wsystemCallback(const wchar_t *command);

extern HRESULT (WINAPI *URLDownloadToFileWNext)(LPUNKNOWN pCaller, LPCTSTR szURL, LPCWSTR szFileName, _Reserved_ DWORD dwReserved, LPBINDSTATUSCALLBACK lpfnCB);
HRESULT WINAPI URLDownloadToFileWCallback(LPUNKNOWN pCaller,LPCTSTR szURL,LPCWSTR szFileName,_Reserved_ DWORD dwReserved,LPBINDSTATUSCALLBACK lpfnCB);

extern HRESULT (WINAPI *URLDownloadToFileANext)(LPUNKNOWN pCaller, LPCSTR szURL, LPCSTR szFileName, _Reserved_ DWORD dwReserved, LPBINDSTATUSCALLBACK lpfnCB);
HRESULT WINAPI URLDownloadToFileACallback(LPUNKNOWN pCaller, LPCSTR szURL, LPCSTR szFileName, _Reserved_ DWORD dwReserved, LPBINDSTATUSCALLBACK lpfnCB);

extern BOOL (WINAPI *InternetReadFileNext)(HINTERNET hFile, _Out_ LPVOID lpBuffer, DWORD dwNumberOfBytesToRead, _Out_ LPDWORD lpdwNumberOfBytesRead);
BOOL WINAPI InternetReadFileCallback(HINTERNET hFile,_Out_ LPVOID lpBuffer, DWORD dwNumberOfBytesToRead,_Out_ LPDWORD lpdwNumberOfBytesRead);

extern BOOL (WINAPI *InternetReadFileExWNext)( HINTERNET hFile, _Out_ LPINTERNET_BUFFERSW lpBuffersOut, DWORD dwFlags, DWORD_PTR dwContext);
BOOL WINAPI InternetReadFileExWCallback( HINTERNET hFile,_Out_ LPINTERNET_BUFFERSW lpBuffersOut, DWORD dwFlags, DWORD_PTR dwContext);

extern LPVOID(WINAPI *VirtualAllocNext)(LPVOID lpAddress,SIZE_T dwSize,DWORD  flAllocationType,DWORD  flProtect);
LPVOID WINAPI VirtualAllocCallback(LPVOID lpAddress,SIZE_T dwSize,DWORD  flAllocationType,DWORD  flProtect);

extern HANDLE (WINAPI *HeapCreateNext)(DWORD  flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize);
HANDLE WINAPI HeapCreateCallback(DWORD  flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize);

extern BOOL (WINAPI *WriteProcessMemoryNext)( HANDLE  hProcess, LPVOID  lpBaseAddress,LPCVOID lpBuffer, SIZE_T  nSize,SIZE_T  *lpNumberOfBytesWritten);
BOOL WINAPI WriteProcessMemoryCallback(HANDLE  hProcess, LPVOID  lpBaseAddress, LPCVOID lpBuffer, SIZE_T  nSize, SIZE_T  *lpNumberOfBytesWritten);

extern BOOL (WINAPI *VirtualProtectNext)(LPVOID lpAddress,SIZE_T dwSize, DWORD  flNewProtect,PDWORD lpflOldProtect);
BOOL WINAPI VirtualProtectCallback(LPVOID lpAddress, SIZE_T dwSize, DWORD  flNewProtect, PDWORD lpflOldProtect);

extern BOOL (WINAPI *SetProcessDEPPolicyNext)(DWORD dwFlags);
BOOL WINAPI SetProcessDEPPolicyCallback(DWORD dwFlags);

#endif